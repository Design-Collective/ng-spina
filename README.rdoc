== README

## Ruby version
ruby "2.2.2"

## System dependencies 

Rails: '4.1.9'
Rails API: 'rails-api'
DB: Postgres

## Client Dependancies 
https://github.com/Swiip/generator-gulp-angular

## Run the App 
`$ gulp serve:full-stack`

The front-end server should come up on port 9000 instead of 3619.
If you navigate to http://localhost:9000/api/foo, you should get a Rails page that says No route matches [GET] "/api/foo", which means
Rails is running on port 3619.

Local Dev Host should be set by all devs to `collective.dev`

### Angular: 1.4.x (stable)
- Angular Modules: angular-animate.js (enable animation features), angular-cookies.js (handle cookie management), angular-touch.js (for mobile development), angular-sanitize.js (to securely
 parse and manipulate HTML), angular-messages.js (enhanced support for displaying messages within templates), angular-aria.js (suppor
t for common ARIA attributes)

- jQuery: jQuery 2.x (new version, lighter, IE9+)

- REST resource library: ngResource, the official support for RESTful services

- Router:  UI Router, flexible routing with nested views

- UI Framework: Angular Material, the reference implementation of the Google's Material Design specification

- CSS PreProcessor: Sass (Node), Node.js binding to libsass, the C version of the popular stylesheet preprocessor, 
Sass.

- Js Preprocessor: CoffeeScript, "a little language that compiles into JavaScript".

- HTML Template Engine: Jade (*.jade)

## Gulp
It's time to use Gulp tasks:
- `$ gulp` to build an optimized version of your application in folder dist
- `$ gulp serve` to start BrowserSync server on your source files with live reload
- `$ gulp serve:dist` to start BrowserSync server on your optimized application without live reload
- `$ gulp test` to run your unit tests with Karma
- `$ gulp test:auto` to run your unit tests with Karma in watch mode
- `$ gulp protractor` to launch your e2e tests with Protractor
- `$ gulp protractor:dist` to launch your e2e tests with Protractor on the dist files

##  Configuration
WIP

##  Database creation
`rake db:create`

##  Database initialization
WIP

##  How to run the test suite
WIP

##  Services (job queues, cache servers, search engines, etc.)
WIP

##  Deployment instructions
WIP

Please feel free to use a different markup language if you do not plan to run
<tt>rake doc:app</tt>.
